{"version":3,"sources":["components/ProfilePic/profile-picture.jpg","components/JmboTron/index.js","components/Projects/index.js","components/ProfilePic/index.js","components/About/index.js","components/Contact/index.js","components/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","JmboTron","Jumbotron","className","id","Container","Projects","props","Card","style","width","Img","variant","src","image","Body","Title","name","Text","description","Link","href","link1","target","link2","ProfilePic","Image","pic","thumbnail","About","Contact","icon","faEnvelope","faMapMarkerAlt","rel","faGithubSquare","size","faLinkedin","Footer","faCoffee","faCopyright","App","useState","data","project","fluid","Row","map","proj","Col","sm","key","hrefB","hrefA","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f03a1710.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-picture.15369e74.jpg\";","import React from \"react\";\r\nimport {Container, Jumbotron} from 'react-bootstrap';\r\nimport \"./style.css\";\r\n\r\nfunction JmboTron() {\r\n    return (\r\n        <Jumbotron className=\"mb-0 d-flex align-items-center\">\r\n            <p id=\"credits\">Photo By: Yarenci Hdz</p>\r\n            <Container className=\"d-flex flex-column align-items-center text-center\">\r\n                <h1>JOSH PANAKKAL</h1>\r\n                <p>FULL STACK WEB DEVELOPER</p>\r\n            </Container>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default JmboTron;","import React from \"react\";\r\nimport Card from 'react-bootstrap/Card';\r\nimport \"./style.css\";\r\n\r\nfunction Projects(props) {\r\n  return (\r\n    <Card style={{ width: '20rem' }}>\r\n      <Card.Img variant=\"top\" src={props.image} />\r\n      <Card.Body>\r\n        <Card.Title>{props.name}</Card.Title>\r\n        <Card.Text>{props.description}</Card.Text>\r\n      </Card.Body>  \r\n      <Card.Body>\r\n        <Card.Link href={props.link1} target=\"_blank\" id=\"link1\">GitHub</Card.Link>\r\n        <Card.Link href={props.link2} target=\"_blank\" id=\"link2\">View</Card.Link>\r\n      </Card.Body>\r\n    </Card> \r\n  )    \r\n}\r\n\r\nexport default Projects;","import React from \"react\";\r\nimport Image from 'react-bootstrap/Image';\r\nimport pic from \"./profile-picture.jpg\";\r\nimport \"./style.css\";\r\n\r\nfunction ProfilePic() {\r\n    return (\r\n        <Image src={pic} thumbnail id=\"profPic\" />       \r\n    )\r\n}\r\n\r\nexport default ProfilePic;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction About() {\r\n    return (\r\n        <div id=\"aboutDiv\">\r\n            <h4>ABOUT</h4>\r\n            <p className=\"footerPara\">Full Stack Web Developer (MERN Stack) <br />\r\n            Case Western Reserve Coding Bootcamp Graduate <br />\r\n            13 Years Industrial Maintenance Background <br />\r\n            Father, Husband, Cyclist / MTB</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faMapMarkerAlt, faEnvelope } from '@fortawesome/free-solid-svg-icons';\r\nimport { faGithubSquare, faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport \"./style.css\";\r\n\r\nfunction Contact() {\r\n    return (\r\n        <div id=\"contactDiv\">\r\n            <h4>CONTACT</h4>\r\n            <p id=\"contactPara\"><FontAwesomeIcon icon={faEnvelope} /> josh_panakkal3122@hotmail.com<br />\r\n            <FontAwesomeIcon icon={faMapMarkerAlt} /> Cleveland, OH</p>\r\n            <a className=\"contactLink\" href=\"https://github.com/jpanakkal22\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faGithubSquare} size={'2x'} /></a>\r\n            <a className=\"contactLink\" href=\"https://www.linkedin.com/in/josh-panakkal-6a0644a5/\" target=\"_blank\" rel=\"noopener noreferrer\"><FontAwesomeIcon icon={faLinkedin} size={'2x'} /></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from \"react\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport { faCopyright } from '@fortawesome/free-regular-svg-icons';\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n        <h6><FontAwesomeIcon icon={faCoffee} /> Enjoy! <FontAwesomeIcon icon={faCopyright} /> J.Panakkal 2020</h6>\n        \n        </div>\n      </div>      \n    </footer>\n  );\n}\n\nexport default Footer;","import React, { useState } from 'react';\nimport JmboTron from './components/JmboTron';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Projects from \"./components/Projects\";\nimport ProfilePic from \"./components/ProfilePic\";\nimport About from \"./components/About\";\nimport Contact from \"./components/Contact\";\nimport Footer from \"./components/Footer\";\nimport data from \"./projects.json\";\nimport \"./App.css\";\n\nfunction App() {\n  const [project] = useState(data); \n\n  return (   \n    <div id=\"mainDiv\">      \n      <JmboTron /> \n      <Container fluid>        \n        <Row className=\"row1 mt-5\">\n          \n          {project.map(proj => {\n            return (\n              <Col sm={3} className=\"d-flex justify-content-center p-3\" key={proj.id}>\n                <Projects \n                image={proj.image}\n                name={proj.name}\n                description={proj.description}\n                link1={proj.hrefB}\n                link2={proj.hrefA}\n                />                          \n              </Col>\n            )            \n          })}     \n        </Row>  \n        <Row className=\"footerRow pt-4 mt-5\">\n          <Col sm={4} className=\"d-flex justify-content-center\">            \n            <ProfilePic />       \n          </Col>\n          <Col sm={8}>\n            <Row className=\"footerRow\">\n              <Col sm={6}>\n                <About />          \n              </Col>\n              <Col sm={6}>\n                <Contact />\n              </Col>\n            </Row>            \n          </Col>\n        </Row>                       \n        <Row>\n          <Footer />\n        </Row>            \n      </Container> \n    </div>            \n  )\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}